1. Create project
    1.1 venv python version: 3.10.10
    1.2 .gitignore setting

2. Set MongoDB with docker-compose
    2.1 docker-compose.yml
        2.1.1 .env setting
        2.1.2 Docker volume for mongoDB
        2.1.3 docker-compose up -d
    2.2 About mongoDB container
        2.2.1 image: mongo:6.0.5
    2.3 Test connection in DataGrip
        2.3.1 Test connection to mongoDB was successful
        2.3.2 Trying to execute query was successful
            2.3.2.1 Query contents - /documents/query/test_query.txt




3. FastAPI project setup

        3.1 Dependency
            3.1.1 requirements.txt
                fastapi>=0.94.0, <0.95.0
                uvicorn>=0.20.0, <0.21.0
                pydantic>=1.9.0, <1.10.0
            3.1.2 requirements.dev.txt
                <EMPTY NOW>
            3.1.3 requirements.test.txt
                pytest>=7.1.0, <7.2.0
                flake8>=5.0.4, < 5.1.0


        3.2 Implement FastAPI
            3.2.1 main.py
                Create FastAPI app
                run uvicorn server

            3.2.2 /api/api.py
                create_app()
                    Endpoint
                        "/" -> docs
                        "/api/v1/demo" -> handlers/demo.py
                    router setting

            3.2.3 /api/responses.py
                class DetailResponse(BaseModel):
                    -> This class makes response format to json

            3.2.4 /api/handlers/
                -> Practical endpoint code is going to be here
                3.2.4.1 demo.py
                    router = APIRouter()
                    @router.get("/demo", response_model=DetailResponse)


        3.3 Make script for test
            /test.sh
                1. Run flake8





4. FastAPI demo

    4.1 Endpoint (prefix="/api/v1/demo")
        4.1.1 GET "/"
            Return simple string message as json

        4.1.2 GET "/state-counter"
            - Test for when initialize the variable inside of function
                - Every function calls from request, initialize function variable
                - But global variable that located outside of function saves state until Exit of App

        4.1.3 POST "/hello/name-in-body"
            - Receive BaseModel class as parameter
            - Send json in body, response it

        4.1.4 POST "/hello/{name}"
            - Send data with path

        4.1.5 GET "/hello-query"
            - Send data with query
            - Send data Key-Value as params
            - Result http address:
                "/hello-query?name=abcdef"

    4.2 Endpoint 2 (prefix="/api/v1/demo")

        4.2.1 DELETE "/delete"
            - Just show message now

        4.2.2 DELETE "/delete/{name}"
            - How to return 404 with json response
            - How to use
                - JSONResponse()
                - jsonable_encoder()

        4.2.3 GET "/error"
            - Raise 404 HTTP Exception


5. Entities and CRUD abstraction class

    5.1 Create movie entity
        - Path: /api/entities/movie.py
        - Definite field and its type

    5.2 Create CRUD abstraction class
        - Repository(abc.ABC)
            - create_movie()
            - get_by_id()
            - get_by_title()
            - update_movie()
            - delete_movie()
        - RepositoryException(Exception)